@use 'sass:map';

.xui-button {
  display: inline-flex;
  align-items: center;
  justify-content: center;

  border: none;
  border-radius: 4px;

  font-family: var(--font-primary);
  font-weight: 400;
  font-style: normal;
  touch-action: manipulation;
  user-select: none;
  cursor: pointer;

  transition: 0.3s;
  outline: none;
  background: none;

  padding: 0 1em;
  line-height: 1em;
  min-width: 4.57em;
  height: 2.57em;

  &[disabled] {
    cursor: not-allowed;
  }
}

@mixin btn-color($theme, $name) {
  $palette: map.get($theme, $name);

  &.xui-button-#{$name} {
    color: map.get($palette, default);
    border-color: map.get($palette, default);

    &:focus {
      color: map.get($palette, darker);
    }

    &:hover {
      background-color: map.get($palette, default);
      color: map.get($palette, default-contrast);
    }

    &:active {
      background-color: map.get($palette, darker);
      color: map.get($palette, darker-contrast);
    }

    &[disabled],
    &[disabled]:focus,
    &[disabled]:active,
    &[disabled]:hover {
      color: map.get($palette, 950); // TODO
      background: none;
    }
  }
}

@mixin btn-bg-color($theme, $name) {
  $palette: map.get($theme, $name);

  &.xui-button-#{$name} {
    color: map.get($palette, default-contrast);
    background-color: map.get($palette, default);

    &:focus,
    &:hover,
    &:active {
      color: map.get($palette, darker-contrast);
      background-color: map.get($palette, darker);
    }

    &[disabled],
    &[disabled]:focus,
    &[disabled]:active,
    &[disabled]:hover {
      color: map.get($palette, default-contrast);
      background-color: map.get($palette, 950); // TODO
    }
  }
}

@mixin button-colors($theme) {
  @include btn-color($theme, primary);
  @include btn-color($theme, primary-alt);
  @include btn-color($theme, secondary);
  @include btn-color($theme, destructive);
}

@mixin button-bg-colors($theme) {
  @include btn-bg-color($theme, primary);
  @include btn-bg-color($theme, primary-alt);
  @include btn-bg-color($theme, secondary);
  @include btn-bg-color($theme, destructive);
}

@mixin theme($theme) {
  .xui-button-normal {
    @include button-colors($theme);
  }

  .xui-button-dashed {
    @include button-colors($theme);
    border: 1px dashed;
  }

  .xui-button-stroked {
    @include button-colors($theme);
    border: 1px solid;
  }

  .xui-button-raised {
    @include button-bg-colors($theme);
    border: 1px solid transparent;
  }

  .xui-button-fab {
    @include button-bg-colors($theme);
    border-radius: 40px;
    min-width: 38px;
  }

  .xui-button-icon {
    // TODO
  }

  .xui-button-state--nonidle {
    cursor: not-allowed !important;
    pointer-events: none !important;

    .xui-button-state-image {
      width: 1rem;
      height: 1rem;
      background: center no-repeat;
      margin-left: 0.25em;
      margin-bottom: 2px;
    }
  }

  .xui-button-state--loading {
    @extend .xui-button-state--nonidle;
    .xui-button-state-image {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' style='width:24px;height:24px' viewBox='0 0 24 24'%3E%3Cpath fill='white' d='M12,4V2A10,10 0 0,0 2,12H4A8,8 0 0,1 12,4Z' /%3E%3C/svg%3E");
      animation: spin 1s infinite linear;
    }
  }

  .xui-button-state--succeeded {
    $palette: map.get($theme, success);

    @extend .xui-button-state--nonidle;
    background-color: map.get($palette, default) !important;
    color: map.get($palette, default-contrast) !important;

    .xui-button-state-image {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' style='width:24px;height:24px' viewBox='0 0 24 24'%3E%3Cpath fill='white' d='M21,7L9,19L3.5,13.5L4.91,12.09L9,16.17L19.59,5.59L21,7Z' /%3E%3C/svg%3E");
    }
  }

  .xui-button-state--failed {
    $palette: map.get($theme, destructive);

    @extend .xui-button-state--nonidle;
    background-color: map.get($palette, default) !important;
    color: map.get($palette, default-contrast) !important;

    .xui-button-state-image {
      background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' style='width:24px;height:24px' viewBox='0 0 24 24'%3E%3Cpath fill='white' d='M19,6.41L17.59,5L12,10.59L6.41,5L5,6.41L10.59,12L5,17.59L6.41,19L12,13.41L17.59,19L19,17.59L13.41,12L19,6.41Z' /%3E%3C/svg%3E");
    }
  }
}

xui-button-group {
  display: flex;

  > button[xui] {
    border-radius: 0;
    margin-right: 0;
  }

  > button[xui]:first-child {
    border-top-left-radius: 5px;
    border-bottom-left-radius: 5px;
  }

  > button[xui]:last-child {
    border-top-right-radius: 5px;
    border-bottom-right-radius: 5px;
  }

  > button[xui]:not(:first-child) {
    margin-left: -1px;
  }
}

.xui-button-md {
  font-size: 14px;
}

.xui-button-sm {
  font-size: 12px;
}

.xui-button-lg {
  font-size: 16px;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}
