@use 'sass:map';
@use 'sass:math';

@function strip-unit($number) {
  @return $number / ($number * 0 + 1);
}

@function define-typography-level(
  $font-size,
  $line-height,
  $font-weight: 400,
  $font-family: null,
  $letter-spacing: normal
) {
  @if type-of($letter-spacing) == number {
    $letter-spacing: math.div($letter-spacing, strip-unit($font-size) * 16) * 1em;
  }

  @return (
    font-family: $font-family,
    font-weight: $font-weight,
    font-size: $font-size,
    line-height: $line-height,
    letter-spacing: $letter-spacing
  );
}

@function define-typography-config(
  $font-family: null,
  $headline-1: null,
  $headline-2: null,
  $headline-3: null,
  $headline-4: null,
  $headline-5: null,
  $headline-6: null,
  $subtitle-1: null,
  $subtitle-2: null,
  $body-1: null,
  $body-2: null,
  $caption: null,
  $button: null,
  $overline: null
) {
  $headline-family: $font-family or 'Bungee', 'Helvetica Neue', sans-serif;
  $body-family: $font-family or 'Rubik', 'Helvetica Neue', sans-serif;

  $config: (
    //headline-1: $headline-1 or define-typography-level(6rem, 6rem, 300, -1.5, $headline-family),
    //headline-2: $headline-2 or define-typography-level(3.75rem, 3.75rem, 300, -0.5, $headline-family),
    //headline-3: $headline-3 or define-typography-level(3rem, 3.125rem, 400, $font-family: $headline-family),
    //headline-4: $headline-4 or define-typography-level(2.125rem, 2.5rem, 400, 0.25, $headline-family),
    //headline-5: $headline-5 or define-typography-level(1.5rem, 2rem, 400, $font-family: $headline-family),
    //headline-6: $headline-6 or define-typography-level(1.25rem, 2rem, 500, 0.25, $headline-family),
    //subtitle-1: $subtitle-1 or define-typography-level(1rem, 1.75rem, 400, 0.15, $body-family),
    //subtitle-2: $subtitle-2 or define-typography-level(0.875rem, 1.375rem, 500, 0.1, $body-family),
    //body-1: $body-1 or define-typography-level(1rem, 1.5rem, 400, 0.5, $body-family),
    //body-2: $body-2 or define-typography-level(0.875rem, 1.25rem, 400, 0.25, $body-family),
    //caption: $caption or define-typography-level(0.75rem, 1.25rem, 400, 0.4, $body-family),
    //button: $button or define-typography-level(0.875rem, 2.25rem, 500, $font-family: $body-family),
    //overline: $overline or define-typography-level(0.75rem, 2rem, 500, 2, $body-family) // Default was .8 for both
    headline-1: $headline-1 or define-typography-level(6rem, 6rem, 300, $headline-family),
    headline-2: $headline-2 or define-typography-level(3.75rem, 3.75rem, 300, $headline-family),
    headline-3: $headline-3 or define-typography-level(3rem, 3.125rem, 400, $headline-family),
    headline-4: $headline-4 or define-typography-level(2.125rem, 2.5rem, 400, $headline-family),
    headline-5: $headline-5 or define-typography-level(1.5rem, 2rem, 400, $headline-family),
    headline-6: $headline-6 or define-typography-level(1.25rem, 2rem, 500, $headline-family),
    subtitle-1: $subtitle-1 or define-typography-level(1rem, 1.75rem, 400, $body-family),
    subtitle-2: $subtitle-2 or define-typography-level(0.875rem, 1.375rem, 500, $body-family),
    body-1: $body-1 or define-typography-level(1rem, 1.5rem, 400, $body-family),
    body-2: $body-2 or define-typography-level(0.875rem, 1.25rem, 400, $body-family),
    caption: $caption or define-typography-level(0.75rem, 1.25rem, 400, $body-family),
    button: $button or define-typography-level(0.875rem, 2.25rem, 500, $body-family),
    overline: $overline or define-typography-level(0.75rem, 2rem, 500, $body-family) // Default was .8 for both
  );

  @each $key, $level in $config {
    @if map.get($level, font-family) == null {
      $new-level: map.merge(
        $level,
        (
          font-family: $font-family
        )
      );

      $config: map.merge(
        $config,
        (
          $key: $new-level
        )
      );
    }
  }

  @return map.merge(
    $config,
    (
      font-family: $font-family
    )
  );
}

@function font-family($theme, $typography) {
  $typo: map.get($theme, typography);
  $group: map.get($typo, $typography);
  @return map.get($group, font-family);
}

@function font-size($theme, $typography) {
  $typo: map.get($theme, typography);
  $group: map.get($typo, $typography);
  @return map.get($group, font-size);
}

@function font-weight($theme, $typography) {
  $typo: map.get($theme, typography);
  $group: map.get($typo, $typography);
  @return map.get($group, font-weight);
}

@function line-height($theme, $typography) {
  $typo: map.get($theme, typography);
  $group: map.get($typo, $typography);
  @return map.get($group, line-height);
}

@function letter-spacing($theme, $typography) {
  $typo: map.get($theme, typography);
  $group: map.get($typo, $typography);
  @return map.get($group, letter-spacing);
}

@mixin typography-level($theme, $typography) {
  font-family: font-family($theme, $typography);
  font-size: font-size($theme, $typography);
  font-weight: font-weight($theme, $typography);
  line-height: line-height($theme, $typography);
  letter-spacing: letter-spacing($theme, $typography);
}

@mixin typography-hierarchy($theme) {
  h1 {
    @include typography-level($theme, headline-1);
    margin: 0 0 16px;
  }

  h2 {
    @include typography-level($theme, headline-2);
    margin: 0 0 16px;
  }

  h3 {
    @include typography-level($theme, headline-3);
    margin: 0 0 16px;
  }

  h4 {
    @include typography-level($theme, headline-4);
    margin: 0 0 16px;
  }

  h5 {
    @include typography-level($theme, headline-5);
    margin: 0 0 12px;
  }

  h6 {
    @include typography-level($theme, headline-6);
    margin: 0 0 12px;
  }

  body,
  pre,
  .xui-body {
    @include typography-level($theme, body-1);

    p {
      //margin: 0 0 12px;
    }
  }

  label {
    @include typography-level($theme, overline);
    text-transform: uppercase;
  }

  body strong {
    @include typography-level($theme, body-2);
  }

  .xui-caption {
    @include typography-level($theme, caption);
  }

  .xui-subtitle-1 {
    @include typography-level($theme, subtitle-1);
  }

  .xui-subtitle-2 {
    @include typography-level($theme, subtitle-2);
  }
}
