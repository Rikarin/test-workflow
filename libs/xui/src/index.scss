@use 'sass:map';

@use 'button/button';
@use 'banner/banner';
@use 'menu/menu';
@use 'core/scrollbar';
@use 'card/card';
@use 'input/input';
@use 'settings/settings';
@use 'tabs/tabs';
@use 'context-menu/context-menu';
@use 'progress/progress';
@use 'icon/icon';
@use 'checkbox/checkbox';
@use 'theming/theming';
@use 'switch/switch';

@forward 'core/core';
@forward 'icon/icon';
@forward 'layout/layout';
@forward 'theming/palettes';
@forward 'theming/theming' show define-palette, define-dark-theme, create-variables;
@forward 'button/button' as button-* show button-theme;
@forward 'menu/menu' as menu-* show menu-theme;
@forward 'banner/banner' as banner-* show banner-theme;
@forward 'core/scrollbar' as scrollbar-* show scrollbar-theme;
@forward 'card/card' as card-* show card-theme;
@forward 'input/input' as input-* show input-theme;
@forward 'settings/settings' as settings-* show settings-theme;
@forward 'tabs/tabs' as tabs-* show tabs-theme;
@forward 'context-menu/context-menu' as context-menu-* show context-menu-theme;
@forward 'progress/progress' as progress-* show progress-theme;
@forward 'checkbox/checkbox' as checkbox-* show checkbox-theme;
@forward 'switch/switch' as switch-* show switch-theme;
@forward 'tooltip/tooltip.theme' as tooltip-*;

@import '@angular/cdk/overlay-prebuilt.css';

@mixin all-component-themes($theme) {
  @include card.theme($theme);
  @include button.theme($theme);
  @include input.theme($theme);
  @include banner.theme($theme);
  @include menu.theme($theme);
  @include tabs.theme($theme);
  @include context-menu.theme($theme);
  @include progress.theme($theme);
  @include checkbox.theme($theme);
  @include switch.theme($theme);

  @include scrollbar.theme($theme);
  @include settings.theme($theme);

  @include switch.generate-color-variations($theme);

  a {
    $info: map.get($theme, information);
    color: map.get($info, default);
  }
}

@mixin all-color-variables($theme) {
  :root {
    @include theming.create-variables($theme, primary);
    @include theming.create-variables($theme, primary-alt);
    @include theming.create-variables($theme, secondary);

    @include theming.create-variables($theme, information);
    @include theming.create-variables($theme, success);
    @include theming.create-variables($theme, destructive);
    @include theming.create-variables($theme, warn);

    @include theming.create-variables($theme, background);
  }
}

// button
// --font-primary

// input
// --text stuff

// Settings

// TODO: background contrast colors

//@mixin generate-color-variations($theme, $name) {
//  @each $key, $value in $theme {
//    @debug $key;
//
//    $default: map.get($value, default);
//
//    .#{$name}-#{$key} {
//      background-color: $default;
//
//      .xui-switch-handle {
//        color: $default;
//      }
//    }
//  }
//}
//
